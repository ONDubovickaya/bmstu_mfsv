  0:	proc  - (:root:) creates proc  0 (:init:)
  1:	proc  0 (:init::1) mutex.pml:38 (state 1)	[i = 0]
  3:	proc  0 (:init::1) mutex.pml:40 (state 2)	[((i<2))]
  4:	proc  0 (:init::1) mutex.pml:41 (state 3)	[progress[i] = 0]
Starting incrementer with pid 1
  5:	proc  0 (:init::1) creates proc  1 (incrementer)
  5:	proc  0 (:init::1) mutex.pml:42 (state 4)	[(run incrementer(i))]
  6:	proc  0 (:init::1) mutex.pml:43 (state 5)	[i = (i+1)]
  7:	proc  0 (:init::1) mutex.pml:40 (state 2)	[((i<2))]
  8:	proc  0 (:init::1) mutex.pml:41 (state 3)	[progress[i] = 0]
Starting incrementer with pid 2
  9:	proc  0 (:init::1) creates proc  2 (incrementer)
  9:	proc  0 (:init::1) mutex.pml:42 (state 4)	[(run incrementer(i))]
 10:	proc  0 (:init::1) mutex.pml:43 (state 5)	[i = (i+1)]
 11:	proc  0 (:init::1) mutex.pml:44 (state 6)	[((i>=2))]
 12:	proc  0 (:init::1) mutex.pml:39 (state 10)	[break]
 13:	proc  2 (incrementer:1) mutex.pml:25 (state 1)	[(1)]
 14:	proc  1 (incrementer:1) mutex.pml:25 (state 1)	[(1)]
 15:	proc  0 (:init::1) mutex.pml:49 (state 12)	[i = 0]
 16:	proc  0 (:init::1) mutex.pml:50 (state 13)	[sum = 0]
 17:	proc  0 (:init::1) mutex.pml:52 (state 14)	[((i<2))]
 18:	proc  0 (:init::1) mutex.pml:53 (state 15)	[sum = (sum+progress[i])]
 19:	proc  0 (:init::1) mutex.pml:54 (state 16)	[i = (i+1)]
 20:	proc  0 (:init::1) mutex.pml:52 (state 14)	[((i<2))]
 21:	proc  0 (:init::1) mutex.pml:53 (state 15)	[sum = (sum+progress[i])]
 22:	proc  0 (:init::1) mutex.pml:54 (state 16)	[i = (i+1)]
 23:	proc  0 (:init::1) mutex.pml:55 (state 17)	[((i>=2))]
 24:	proc  0 (:init::1) mutex.pml:51 (state 21)	[break]
 25:	proc  0 (:init::1) mutex.pml:57 (state 22)	[assert(((sum<2)||(counter==2)))]
 26:	proc  1 (incrementer:1) mutex.pml:25 (state 2)	[((mutex==0))]
 27:	proc  1 (incrementer:1) mutex.pml:25 (state 3)	[mutex = 1]
 28:	proc  1 (incrementer:1) mutex.pml:25 (state 12)	[break]
 29:	proc  1 (incrementer:1) mutex.pml:26 (state 13)	[tmp = counter]
 30:	proc  2 (incrementer:1) mutex.pml:25 (state 5)	[else]
 31:	proc  2 (incrementer:1) mutex.pml:25 (state 6)	[(1)]
 32:	proc  2 (incrementer:1) mutex.pml:25 (state 1)	[(1)]
 33:	proc  2 (incrementer:1) mutex.pml:25 (state 5)	[else]
 34:	proc  2 (incrementer:1) mutex.pml:25 (state 6)	[(1)]
 35:	proc  2 (incrementer:1) mutex.pml:25 (state 1)	[(1)]
 36:	proc  2 (incrementer:1) mutex.pml:25 (state 5)	[else]
 37:	proc  2 (incrementer:1) mutex.pml:25 (state 6)	[(1)]
 38:	proc  2 (incrementer:1) mutex.pml:25 (state 1)	[(1)]
 39:	proc  1 (incrementer:1) mutex.pml:27 (state 14)	[counter = (tmp+1)]
 40:	proc  1 (incrementer:1) mutex.pml:28 (state 15)	[mutex = 0]
 41:	proc  1 (incrementer:1) mutex.pml:30 (state 16)	[progress[procs_id] = 1]
 42:	proc  2 (incrementer:1) mutex.pml:25 (state 2)	[((mutex==0))]
 43:	proc  2 (incrementer:1) mutex.pml:25 (state 3)	[mutex = 1]
 44:	proc  2 (incrementer:1) mutex.pml:25 (state 12)	[break]
 45:	proc  2 (incrementer:1) mutex.pml:26 (state 13)	[tmp = counter]
 46:	proc  2 (incrementer:1) mutex.pml:27 (state 14)	[counter = (tmp+1)]
 47:	proc  2 (incrementer:1) mutex.pml:28 (state 15)	[mutex = 0]
 48:	proc  2 (incrementer:1) mutex.pml:30 (state 16)	[progress[procs_id] = 1]
 48:	proc  2 (incrementer:1) terminates
 48:	proc  1 (incrementer:1) terminates
 48:	proc  0 (:init::1) terminates
3 processes created
