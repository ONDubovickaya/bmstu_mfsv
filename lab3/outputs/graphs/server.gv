digraph p_server {
size="8,10";
  GT [shape=box,style=dotted,label="server"];
  GT -> S4;
	S4 -> S2  [color=black,style=dashed,label="client_to_server?msg.msg_type,msg.payload"];
	S2 -> S3  [color=black,style=dashed,label="assert((msg.msg_type==SYN))"];
	S3 -> S5  [color=red,style=bold,label="printf('[server] Received SYN from client ')"];
	S5 -> S6  [color=blue,style=solid,label="msg.msg_type = SYN_ACK"];
	S6 -> S7  [color=blue,style=solid,label="msg.payload = 0"];
	S7 -> S8  [color=blue,style=solid,label="printf('[server] Sending SYN_ACK to client.. ')"];
	S8 -> S12  [color=red,style=bold,label="server_to_client!msg.msg_type,msg.payload"];
	S12 -> S10  [color=black,style=dashed,label="client_to_server?msg.msg_type,msg.payload"];
	S10 -> S11  [color=black,style=dashed,label="assert((msg.msg_type==ACK))"];
	S11 -> S13  [color=red,style=bold,label="printf('[server] Received ACK from client ')"];
	S13 -> S14  [color=blue,style=solid,label="i = 0"];
	S14 -> S27  [color=blue,style=solid,label="i = 1"];
	S27 -> S19  [color=blue,style=solid,label="((i<=3))"];
	S27 -> S33  [color=blue,style=solid,label="else"];
	S19 -> S17  [color=black,style=dashed,label="client_to_server?msg.msg_type,msg.payload"];
	S17 -> S18  [color=black,style=dashed,label="assert((msg.msg_type==DATA))"];
	S18 -> S20  [color=red,style=bold,label="printf('[server] Received DATA from client: %d ',msg.payload)"];
	S20 -> S21  [color=blue,style=solid,label="msg.msg_type = ACK"];
	S21 -> S22  [color=blue,style=solid,label="msg.payload = 0"];
	S22 -> S23  [color=blue,style=solid,label="printf('[server] Sending ACK for DATA to client.. ')"];
	S23 -> S24  [color=red,style=bold,label="server_to_client!msg.msg_type,msg.payload"];
	S24 -> S27  [color=blue,style=solid,label="i = (i+1)"];
	S33 -> S31  [color=black,style=dashed,label="client_to_server?msg.msg_type,msg.payload"];
	S31 -> S32  [color=black,style=dashed,label="assert((msg.msg_type==FIN))"];
	S32 -> S34  [color=red,style=bold,label="printf('[server] Received FIN from client ')"];
	S34 -> S35  [color=blue,style=solid,label="msg.msg_type = FIN_ACK"];
	S35 -> S36  [color=blue,style=solid,label="msg.payload = 0"];
	S36 -> S37  [color=blue,style=solid,label="printf('[server] Sending FIN_ACK to client.. ')"];
	S37 -> S41  [color=red,style=bold,label="server_to_client!msg.msg_type,msg.payload"];
	S41 -> S39  [color=black,style=dashed,label="client_to_server?msg.msg_type,msg.payload"];
	S39 -> S40  [color=black,style=dashed,label="assert((msg.msg_type==ACK))"];
	S40 -> S42  [color=red,style=bold,label="printf('[server] Received ACK from client ')"];
	S42 -> S0  [color=blue,style=solid,label="-end-"];
  S42 [color=blue,style=bold,shape=box];
}